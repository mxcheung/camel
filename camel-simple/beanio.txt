package com.abnamro.clearing.ndm.route.processor;

import java.io.File;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.apache.camel.component.file.GenericFile;
import org.apache.camel.dataformat.beanio.BeanIOHeader;
import org.apache.commons.lang3.StringUtils;
import org.beanio.BeanReader;
import org.beanio.StreamFactory;
import org.beanio.builder.CsvParserBuilder;
import org.beanio.builder.StreamBuilder;
import org.beanio.types.BigDecimalTypeHandler;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.abnamro.clearing.abm.model.omgeo.ExportAllocationGroup;
import com.abnamro.clearing.abm.model.omgeo.ExportMatchAgreedTradeGroup;
import com.abnamro.clearing.abm.model.omgeo.ImportBlockGroup;
import com.abnamro.clearing.abm.model.omgeo.ImportResponseGroup;
import com.fasterxml.jackson.databind.ObjectMapper;

public class OmgeoProcessor implements Processor {

    private static final Logger LOG = LoggerFactory.getLogger(OmgeoProcessor.class);


    public static final String OMGEO_STREAM_NAME = "omgeoCsvStream";
    public static final String BEANIO_BIGDECIMAL_WITH_SCALE_TYPE_HANDLER = "bigDecimalWithScaleTypeHandler";

	private StreamFactory streamFactory = streamFactory();
	private ObjectMapper objectMapper = new ObjectMapper();

	public OmgeoProcessor() {
		super();
	}

	@Override
    public void process(Exchange exchange) throws Exception {

	    String filename = exchange.getIn().getBody(GenericFile.class).getAbsoluteFilePath();
	    LOG.info("Converting omego filefile {} ", filename);
		File inputFile = new File(filename);
        BeanReader omgeoResponseReader = streamFactory.createReader(OMGEO_STREAM_NAME, inputFile);
		List<Object> results = new ArrayList<Object>();
		try {
			Object readObject;
			while ((readObject = omgeoResponseReader.read()) != null) {
				if (readObject instanceof BeanIOHeader) {
					exchange.getOut().getHeaders().putAll(((BeanIOHeader) readObject).getHeaders());
				}
				results.add(readObject);
			}
		} finally {
		    omgeoResponseReader.close();
		}
		exchange.getOut().setBody(objectMapper.writeValueAsString(results));
	}


    /**
     * A BeanIO stream factory, configured to read / write Omgeo MTI csv files.
     * @return an initialized {@link StreamFactory} object.
     */
    public StreamFactory streamFactory() {
        StreamFactory factory = StreamFactory.newInstance();
        StreamBuilder builder = new StreamBuilder(OMGEO_STREAM_NAME, "csv")
            .parser(new CsvParserBuilder().recordTerminator(StringUtils.CR + StringUtils.LF).enableMultiline())
            .addTypeHandler(BigDecimal.class, new BigDecimalTypeHandler())
            .ignoreUnidentifiedRecords()
            .addGroup(ImportBlockGroup.class)
            .addGroup(ImportResponseGroup.class)
            .addGroup(ExportAllocationGroup.class)
            .addGroup(ExportMatchAgreedTradeGroup.class);
        factory.define(builder);
        return factory;
    }


}
